services:
  db:
    image: ankane/pgvector:latest
    container_name: recommender-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: recommender-mlflow
    environment:
      BACKEND_STORE_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ARTIFACT_ROOT: /mlflow/artifacts
    command: >
      mlflow server
        --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        --default-artifact-root /mlflow/artifacts
        --host 0.0.0.0
        --port 5000
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    networks:
      - app-network

  backend:
    build: ./app
    container_name: recommender-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      MLFLOW_TRACKING_URI: http://mlflow:5000
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    networks:
      - app-network

  trainer:
    image: nvcr.io/nvidia/pytorch:24.03-py3
    profiles: ["train"]
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./training:/workspace
    working_dir: /workspace
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      - mlflow
    networks:
      - app-network
    command: ["python", "train.py"]

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
  mlflow_artifacts:
